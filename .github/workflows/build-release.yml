name: CI Workflow

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: true # Fetch submodules

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Run Python script
      run: python setup.py ${{ github.workspace }}\open-simulation-interface\osi_version.proto.in ${{ github.workspace }}\open-simulation-interface\VERSION ${{ github.workspace }}\open-simulation-interface\osi_version.proto

    - name: Install Protobuf
      run: choco install protoc --version=3.19.1 # Install protoc using Chocolatey package manager

    - name: Set up .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.x.x'

    - name: Generate C# code from Protobuf
      run: |
        protoc --proto_path=C:\ProgramData\chocolatey\lib\protoc\tools --proto_path=${{ github.workspace }}\open-simulation-interface --csharp_out=${{ github.workspace }} ${{ github.workspace }}\open-simulation-interface\*.proto

    - name: Restore dependencies
      run: dotnet restore open-simulation-interface-csharp.csproj

    - name: Build
      run: dotnet build --configuration Release open-simulation-interface-csharp.csproj

    - name: Pack NuGet package
      run: dotnet pack --configuration Release --output ./nupkgs open-simulation-interface-csharp.csproj

    - name: Publish NuGet package
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }} # Set this secret in your repository settings
      run: |
        echo "Publishing NuGet package..."
        dotnet nuget push ${{ github.workspace }}\nupkgs\*.nupkg --api-key $NUGET_API_KEY --source https://api.nuget.org/v3/index.json --verbosity detailed
